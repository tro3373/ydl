name: release
on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Actions Cache
        working-directory: client/back
        uses: actions/cache@v3
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        run: echo '${{ toJSON(steps.node_modules_cache_id.outputs) }}'
      - name: Install NPM Packages
        working-directory: client/back
        if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        run: npm install
      - name: Build Client
        working-directory: client/back
        run: npm run build-prd
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v1
        working-directory: server/ydl
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Untar release
        working-directory: server/ydl
        shell: bash
        run: tar xvfpz dist/*linux*tar.gz
      - name: Build Image
        # run: docker build -t ghcr.io/${OWNER,,}/texturepacker:${VERSION} .
        run: make build-image-prd
        # env:
        #   OWNER: ${{ github.repository_owner }}
        #   VERSION: ${{ matrix.version }}
      - name: Docker Login
        run: echo $DOCKER_PASS | docker login -u ${OWNER,,} --password-stdin
        env:
          OWNER: ${{ github.repository_owner }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      - name: Docker Push
        # run: docker push ghcr.io/${OWNER,,}/texturepacker:${VERSION}
        run: make push-image
        # env:
        #   OWNER: ${{ github.repository_owner }}
        #   VERSION: ${{ matrix.version }}
